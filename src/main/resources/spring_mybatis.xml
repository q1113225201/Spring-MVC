<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <!--数据库配置-->
    <context:property-placeholder location="application.properties"/>
    <!--配置数据源-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"
          p:driverClassName="${db.driver}"
          p:url="${db.url}"
          p:username="${db.username}"
          p:password="${db.password}"/>
    <!--
        配置SqlSessionFactory对象

        1).注入数据库连接池
        2).配置MyBaties全局配置文件:mybatis-config.xml
        3).扫描model包 使用别名
        4).扫描sql配置文件:mapper需要的xml文件
    -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
          p:dataSource-ref="dataSource"
          p:configLocation="mybatis_config.xml"
          p:mapperLocations="classpath:sqlmap/*.xml">
    </bean>
    <!--
        spring与mybatis整合配置，动态实现 mapper 接口，注入到 spring 容器中

        1).注入sqlSessionFactory
        2).给出需要扫描 mapper 接口包
    -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
          p:sqlSessionFactoryBeanName="sqlSessionFactory"
          p:basePackage="com.sjl.springmvc.dao"/>
    <!-- 对数据源进行事务管理 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          p:dataSource-ref="dataSource"/>
</beans>